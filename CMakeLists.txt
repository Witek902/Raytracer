CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(Raytracer)

MESSAGE("Generating Makefile for Raytracer project")

INCLUDE(FindPkgConfig)

# Pre-define Release build
IF(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")
    SET(CMAKE_BUILD_TYPE Release)
ENDIF(NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")

# Pre-define 64-bit build platform
IF(NOT DEFINED BUILD_PLATFORM)
    EXECUTE_PROCESS(COMMAND uname -m
                    OUTPUT_VARIABLE BUILD_PLATFORM OUTPUT_STRIP_TRAILING_WHITESPACE)
ENDIF(NOT DEFINED BUILD_PLATFORM)

# Set required variables
SET(CMAKE_CXX_FLAGS       "${CMAKE_CXX_FLAGS} -O2 -std=c++1y -g")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG -O0 -g -std=c++1y")

SET(RT_ROOT_DIRECTORY ${CMAKE_SOURCE_DIR})
SET(RT_OUTPUT_DIRECTORY ${RT_ROOT_DIRECTORY}/Bin/${BUILD_PLATFORM}/${CMAKE_BUILD_TYPE})
SET(RT_CORE_DIRECTORY ${RT_ROOT_DIRECTORY}/Core)
SET(RT_DEMO_DIRECTORY ${RT_ROOT_DIRECTORY}/Demo)
SET(RT_TESTS_DIRECTORY ${RT_ROOT_DIRECTORY}/Tests)
SET(RT_BENCHMARK_DIRECTORY ${RT_ROOT_DIRECTORY}/Benchmark)

ADD_DEFINITIONS("-mavx -DRT_USE_AVX")
# ADD_DEFINITIONS("-mavx2 -DRT_USE_AVX2")
# ADD_DEFINITIONS("-mfma -DRT_USE_FMA")

# Enable more warnings and make them errors
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wall -Wextra -Werror")

# Warnings exceptions
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-multichar")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-switch")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-unused-result")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-unused-private-field")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-four-char-constants")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-unused-local-typedefs")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-inconsistent-missing-override")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations")

ADD_DEFINITIONS(-DRT_ROOT_DIRECTORY="${RT_ROOT_DIRECTORY}/")
ADD_DEFINITIONS(-DRT_COMPILER="${CMAKE_CXX_COMPILER_ID}")
ADD_DEFINITIONS(-DRT_OS="${CMAKE_SYSTEM}")

# Building outputs
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${RT_OUTPUT_DIRECTORY})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${RT_OUTPUT_DIRECTORY})

MESSAGE("Build type is ${CMAKE_BUILD_TYPE}")
MESSAGE("Output path is ${RT_OUTPUT_DIRECTORY}")
MESSAGE("Platform is ${BUILD_PLATFORM}")

# Add all projects
ADD_SUBDIRECTORY("Core")
ADD_SUBDIRECTORY("Demo")
ADD_SUBDIRECTORY("Tests")
ADD_SUBDIRECTORY("Benchmark")

FILE(MAKE_DIRECTORY ${RT_OUTPUT_DIRECTORY})
